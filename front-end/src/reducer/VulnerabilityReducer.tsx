import {Action} from "../type/Action";

const initialState = {vulnerabilities:[] as any[],shownVulnerabilities:[] as any[]} 

const VulnerabilityReducer = (state = initialState, action: Action) => {

    let result = state;

    switch(action.type) {

        case "SET_VULNERABILITY_FILTER" : {
            if(action.filter.length === 0) {
               result = {
                   ...state,
                   shownVulnerabilities:state.vulnerabilities
               }
            } else {
                result = {
                    ...state,
                    shownVulnerabilities:state.vulnerabilities.filter(it => { return true }) //TODO: Make this actually filter 
                }
            }
            break
        }

        case "GET_VULNERABILITIES" : {
            
            let vulnerabilities = [
                ...state.vulnerabilities,
                ...action.results
            ]

            result = {
                ...state,
               vulnerabilities:vulnerabilities,
               shownVulnerabilities:vulnerabilities.filter(it => {return true}) //TODO: Make this actually filter
            }
            break
        }
        default: {
            //console.log("Action type " + action.type + " has no switch case in VulnerabilityReducer");
            break
        }
    }

    return result;
}

export default VulnerabilityReducer;
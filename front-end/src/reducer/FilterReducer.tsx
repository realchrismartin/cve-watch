import { Action } from "../type/Action";

const initialState = { filters: [], toggledFilters: [] };

const FilterReducer = (state = initialState, action: Action) => {
  switch (action.type) {
    case "SET_FILTER": {
      return {
        ...state,
        filters: [...state.filters, action.filter],
      };
    }

    case "CLEAR_FILTER": {
      return {
        ...state,
        filters: state.filters.filter((it: string) => {
          return it !== action.filter;
        }),
        toggledFilters: state.toggledFilters.filter((it: string) => {
          return it !== action.filter;
        })
      };
    }

    case "TOGGLE_FILTER_OFF": {
      return {
        ...state,
        toggledFilters: state.toggledFilters.filter((it: string) => {
          return it !== action.filter;
        }),
      };
    }

    case "TOGGLE_FILTER_ON": {
        return {
            ...state,
            toggledFilters: [...state.toggledFilters, action.filter]
        }
    }
    default: {
      break;
    }
  }
  return state;
};

export default FilterReducer;

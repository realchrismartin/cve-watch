import {
  getUserSession,
  getAccountSubscriptions,
} from "../service/AccountService";
import { AppThunk } from "../type/Action";

export const updateUserSessionAction = (): AppThunk => async (dispatch) => {
  return getUserSession()
    .then((res: boolean) => {
      if (res) {
        return dispatch({ type: "SET_ACCOUNT_SESSION" });
      } else {
        return dispatch({ type: "clear_ACCOUNT_SESSION" });
      }
    })
    .catch((err) => {
      console.log(err);
    });
};

export const updateAccountSubscriptionsAction = (): AppThunk => async (
  dispatch
) => {
  //TODO: remove hardcoding
  return getAccountSubscriptions("fakeusername")
    .then((res) => {
      return dispatch({
        type: "SET_ACCOUNT_SUBSCRIPTIONS",
        subscriptions: [...res.data.subscriptions],
      });
    })
    .catch((err) => {
      console.log(err);
      return dispatch({ type: "SET_ACCOUNT_SUBSCRIPTIONS", subscriptions: [] });
    });
};

export const clearAccountSubscriptionsAction = (): AppThunk => async (
  dispatch
) => {
  return dispatch({ type: "SET_ACCOUNT_SUBSCRIPTIONS", subscriptions: [] });
};

export const toggleSubscriptionOnAction = (
  subscription: string
): AppThunk => async (dispatch) => {
  return dispatch({
    type: "TOGGLE_SUBSCRIPTION_ON",
    subscription: subscription,
  });
};

export const toggleSubscriptionOffAction = (
  subscription: string
): AppThunk => async (dispatch) => {
  return dispatch({
    type: "TOGGLE_SUBSCRIPTION_OFF",
    subscription: subscription,
  });
};

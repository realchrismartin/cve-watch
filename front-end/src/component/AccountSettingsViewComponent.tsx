import React from "react";
import { RootState } from "../store";
import { ConnectedProps, connect } from "react-redux";
import { debounce } from "lodash";

import "../css/AccountSettingsViewComponent.css";
import SoftwareSearchListItemComponent from "./SoftwareSearchListItemComponent";

type ConstructorType = {
  loading: boolean;
  queryDebounceTimeout: number;
};
type PropsType = ConnectedProps<typeof connector>;

class AccountSettingsViewComponent extends React.Component<
  PropsType,
  ConstructorType
> {
  private handleQueryChangeDebounced: any;

  constructor(props: PropsType) {
    super(props);

    this.state = {
      loading: false,
      queryDebounceTimeout: 2000,
    };

    this.handleQueryChange = this.handleQueryChange.bind(this);
    this.handleQueryChangeDebounced = debounce(() => {
      this.handleQueryChange();
    }, this.state.queryDebounceTimeout);
  }

  /*Handler for input settings changing */
  handleQueryChange(): any {
    //TODO
  }

  render(): any {
    let items = [];

    if (this.props.subscriptions !== undefined) {
      items = this.props.subscriptions.map((it: any, index: number) => {
        return (
          <SoftwareSearchListItemComponent
            simple={true}
            key={"sub-list-item-" + index}
            data={it}
          />
        );
      });
    }
    return <div><div className="account-settings-subscriptions-container">{items}</div></div>;
  }
}

function mapStateToProps(state: RootState) {
  return {
    session: state.accountReducer.hasSession,
    account: state.accountReducer.account,
    username: state.accountReducer.username,
    subscriptions: state.accountReducer.subscriptions,
    pageSize: state.settingsReducer.pageSize,
    tooltipTime: state.settingsReducer.tooltipTime,
  };
}

function mapDispatchToProps(dispatch: any) {
  return {};
}

const connector = connect(mapStateToProps, mapDispatchToProps);
export default connector(AccountSettingsViewComponent);

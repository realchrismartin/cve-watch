import React from "react";
import { RootState } from "../store";
import { ConnectedProps, connect } from "react-redux";

import "../css/AccountSettingsViewComponent.css";
import SoftwareSearchListItemComponent from "./SoftwareSearchListItemComponent";
import { setViewAction } from "../action/ViewAction";
import SVGButton from "./SVGButton";

type ConstructorType = {};
type PropsType = ConnectedProps<typeof connector>;

class AccountSettingsViewComponent extends React.Component<
  PropsType,
  ConstructorType
> {
  render(): any {
    let items = [];

    if (this.props.subscriptions !== undefined) {
      items = this.props.subscriptions.map((it: any, index: number) => {
        return (
          <SoftwareSearchListItemComponent
            simple={true}
            key={"sub-list-item-" + index}
            data={it}
          />
        );
      });
    }

    let softwareListEmptyMessageCSSClass =
      this.props.subscriptions.length <= 0 && this.props.session
        ? "software-list-empty-message-show"
        : "software-list-empty-message-hide";

     let softwareListEmptyUnauthenticatedMessageCSSClass =
     this.props.subscriptions.length <= 0 && !this.props.session
       ? "software-list-empty-message-show"
          : "software-list-empty-message-hide";
  
    let softwareListEmptyMessage = (
      <div>
        You aren't watching any software yet. Try searching for some software to watch.
      </div>
    );

    let softwareListEmptyUnauthenticatedMessage = (
      <div>
          Sign up (or log in) to start watching software for newly released vulnerabilities
      </div>
    );

    return (
      <div className="account-settings-container">
        <div className={softwareListEmptyMessageCSSClass}>
        <SVGButton type={8} stroke="currentColor" viewBox="0 0 24 24" onClick={()=>{this.props.changeView(2)}} />
          {softwareListEmptyMessage}
        </div>
        <div className={softwareListEmptyUnauthenticatedMessageCSSClass}>
        <SVGButton type={0} fill="currentColor" onClick={()=>{this.props.changeView(0)}} />
          {softwareListEmptyUnauthenticatedMessage}
        </div>
        <div className="account-settings-subscriptions-container">{items}</div>
      </div>
    );
  }
}

function mapDispatchToProps(dispatch : any) {
  return {
    changeView:(index : number) => {return dispatch(setViewAction(index))}
  }
}

function mapStateToProps(state: RootState) {
  return {
    session: state.accountReducer.hasSession,
    account: state.accountReducer.account,
    username: state.accountReducer.username,
    subscriptions: state.accountReducer.subscriptions,
    pageSize: state.settingsReducer.pageSize,
    tooltipTime: state.settingsReducer.tooltipTime,
  };
}

const connector = connect(mapStateToProps,mapDispatchToProps);
export default connector(AccountSettingsViewComponent);

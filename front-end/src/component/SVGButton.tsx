import React from "react";
import ReactTooltip from "react-tooltip";
import "../css/SVGButton.css";

type PropsType = {
  type: number;
  fill?: string;
  stroke?: string;
  viewBox?: string;
  hoverText?: string;
  tooltipOffset?: any;
  tooltipPlace?: any;
  onClick?: any;
};

type ConstructorType = {
  tooltipShown: boolean;
};

/* Represents a SVG button */
class SVGButton extends React.Component<PropsType, ConstructorType> {
  private static buttonTypes = [
    //Login (0)
    <path d="M3 3a1 1 0 011 1v12a1 1 0 11-2 0V4a1 1 0 011-1zm7.707 3.293a1 1 0 010 1.414L9.414 9H17a1 1 0 110 2H9.414l1.293 1.293a1 1 0 01-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0z" />,

    //Logout (1)
    <path d="M3 3a1 1 0 00-1 1v12a1 1 0 102 0V4a1 1 0 00-1-1zm10.293 9.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L14.586 9H7a1 1 0 100 2h7.586l-1.293 1.293z" />,

    //User Profile Icon (2)
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      fillRule="evenodd"
      clipRule="evenodd"
      d="M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z"
    />,

    //Expand Button (3)
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
    />,
    //Collapse Button (4)
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      fillRule="evenodd"
      clipRule="evenodd"
      d="M9 5l7 7-7 7"
    />,
    //Subscribe Button (5)
    <path
      fillRule="evenodd"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z"
      clipRule="evenodd"
    />,
    //Unsubscribe Button (6)
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21"
    />,
    //Vulnerability List Button (7)
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="2"
      d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"
    />,
    //Software List Button (8)
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="2"
      d="M8 16l2.879-2.879m0 0a3 3 0 104.243-4.242 3 3 0 00-4.243 4.242zM21 12a9 9 0 11-18 0 9 9 0 0118 0z"
    />,
    //Settings Button (9)
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="2"
      d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"
    />,

    //Vuln Settings Button (10)
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4"
    />,

    //Vuln Filter List Expand Button (11)
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M4 6h16M4 12h16m-7 6h7"
    />,
    // Filter Apply Button (12)
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z"
    />,
    //Clear Filter button (13)
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"
    />,
  ];

  private hoverTooltipRef: any;
  private hoverText : string;

  constructor(props: PropsType) {
    super(props);

    this.state = {
      tooltipShown: false,
    };

    this.hoverText = this.props.hoverText || "";
    this.hoverTooltipRef = React.createRef();
  }

  showHoverTooltip() {
    if (!this.state.tooltipShown && this.props.hoverText) {
      ReactTooltip.show(this.hoverTooltipRef);
      this.setState({ tooltipShown: true });
    }
  }

  hideHoverTooltip() {
    if (this.state.tooltipShown) {
      ReactTooltip.hide(this.hoverTooltipRef);
      this.setState({ tooltipShown: false });
    }
  }

  setSVG(path: any): any {
    return (
      <svg
        className="svg-button-icon"
        onClick={() => {
          if (this.props.onClick) {
            this.props.onClick();
          }
        }}
        onMouseEnter={() => {
          if(this.hoverText.length > 0) {
            this.showHoverTooltip();
          }
        }}
        onMouseLeave={() => {
          if(this.hoverText.length > 0) {
            this.hideHoverTooltip();
          }
        }}
        xmlns="http://www.w3.org/2000/svg"
        viewBox={this.props.viewBox || "0 0 20 20"}
        stroke={this.props.stroke || "none"}
        fill={this.props.fill || "none"}
      >
        {path}
      </svg>
    );
  }

  render() {
    let svg = this.setSVG(SVGButton.buttonTypes[this.props.type]);

    let hoverTooltipData = (
      <span
        ref={(ref) => (this.hoverTooltipRef = ref)}
        data-tip={ this.hoverText}
      ></span>
    );

    return (
      <div className="svg-button">
        {hoverTooltipData}
        {svg}
      </div>
    );
  }
}

export default SVGButton;

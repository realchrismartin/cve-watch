import React from "react";
import { connect, ConnectedProps } from "react-redux";
import { RootState } from "../store";
import "../css/SidebarComponent.css";
import { setViewAction } from "../action/ViewAction";
import {
  updateUserSessionAction,
  updateAccountSubscriptionsAction,
} from "../action/AccountAction";
import SVGButton from "./SVGButton";

type ConstructorType = {
  expanded: boolean;
};

type PropsType = ConnectedProps<typeof connector>;

/* Represents the app sidebar, provides links to change view */
class SidebarComponent extends React.Component<PropsType, ConstructorType> {
  constructor(props: PropsType) {
    super(props);

    this.state = {
      expanded: false,
    };
  }

  handleSetView(view: number) {
    this.setState({ expanded: false });

    this.props
      .updateUserSession() 
      .then(() => {
        if (this.props.session) {
          this.props
            .updateUserSubscriptions()
            .then(() => {
              this.props.setView(view);
            });
        } else {
          this.props.setView(view);
        }
      })
      .catch((err: any) => {
        console.log(err);
      });
  }

  render(): any {

    let sidebarCSSClass = this.state.expanded
      ? "sidebar sidebar-expanded"
      : "sidebar sidebar-collapsed";
    return (
      <div className={sidebarCSSClass}>
        <div className="sidebar-icon-container">
          <div className="sidebar-top-space"></div>
          <div className="sidebar-item">
            <SVGButton
            type={7}
              onClick={() => {
                this.handleSetView(1);
              }}
              hoverText="Search NVD Vulnerabilities"
              stroke={"currentColor"}
              viewBox={"0 0 24 24"}
            />
          </div>
          <div className="sidebar-item">
          <SVGButton
            type={8}
              onClick={() => {
                this.handleSetView(2);
              }}
              hoverText="Search NVD Software"
              stroke={"currentColor"}
              viewBox={"0 0 24 24"}
            />
          </div>
          <div className="sidebar-item">
          <SVGButton
            type={9}
              onClick={() => {
                this.handleSetView(3);
              }}
              hoverText="Account Settings"
              stroke={"currentColor"}
              viewBox={"0 0 24 24"}
            />
          </div>
        </div>
      </div>
    );
  }
}
function mapStateToProps(state: RootState) {
  return {
    view: state.settingsReducer.view,
    session: state.accountReducer.hasSession,
    username: state.accountReducer.username,
  };
}

function mapDispatchToProps(dispatch: any) {
  return {
    setView: (view: number) => {
      return dispatch(setViewAction(view));
    },
    updateUserSession: () => {
      return dispatch(updateUserSessionAction());
    },
    updateUserSubscriptions: () => {
      return dispatch(updateAccountSubscriptionsAction());
    }
  };
}

const connector = connect(mapStateToProps, mapDispatchToProps);
export default connector(SidebarComponent);

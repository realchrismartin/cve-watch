import React from "react";
import { checkUserSessionAction } from "../action/AccountAction";
import { login, createAccount } from "../service/AccountService";
import {RootState} from "../store";
import {connect, ConnectedProps} from "react-redux";
type PropsType = ConnectedProps<typeof connector>;

type ConstructorType = {}

class AccountCreationViewComponent extends React.Component<
  PropsType,
  ConstructorType
> {
  private usernameInputRef: any;
  private passwordInputRef: any;

  constructor(props: PropsType) {
    super(props);
    this.usernameInputRef = React.createRef();
    this.passwordInputRef = React.createRef();
  }

  componentDidMount() {
    this.props.checkUserSession();
  }

  handleLogin(event: any) {
      let username = this.usernameInputRef.value;
      let password = this.passwordInputRef.value;

      return login(username,password).then((res) => {
        return this.props.checkUserSession();
      }).catch((err) => {console.log(err)});
  }

  handleCreateAccount(event: any) {
    let username = this.usernameInputRef.value;
    let password = this.passwordInputRef.value;
    
    return createAccount(username,password).then((res) => {
      return this.props.checkUserSession();
    }).catch((err) => {console.log(err)});
  }

  render(): any {
    let loginForm = (
      <form
        onSubmit={(e) => {
          e.preventDefault();
        }}
      >
        <label htmlFor="usernameInput">Username</label>
        <input
          name="usernameInput"
          type="normal"
          ref={(r) => {
            this.usernameInputRef = r;
          }}
        ></input>
        <label htmlFor="passwordInput">Password</label>
        <input
          name="passwordInput"
          type="password"
          ref={(r) => {
            this.passwordInputRef = r;
          }}
        ></input>
        <button
          type="submit"
          onClick={(e) => {
            this.handleCreateAccount(e);
          }}
        >
          Create Account
        </button>
        <button
          type="submit"
          onClick={(e) => {
            this.handleLogin(e);
          }}
        >
          Log in
        </button>
      </form>
    );
    let alreadyLoggedIn = <div>You're already logged in, my friend.</div>;

    let shown = this.props.session ? alreadyLoggedIn : loginForm;

    return <div>{shown}</div>;
  }
}
function mapStateToProps(state: RootState) {
  return {
    session: state.accountReducer.hasSession
  };
}

function mapDispatchToProps(dispatch: any) {
  return {
    checkUserSession: () => {
      return dispatch(checkUserSessionAction());
    },
  };
}

const connector = connect(mapStateToProps, mapDispatchToProps);
export default connector(AccountCreationViewComponent);

import axios from "axios";
import baseURL from "../BaseURL";

//Check if the user has a session
export async function getUserSession(): Promise<any> {
  return new Promise((resolve, reject) => {
    axios
      .get(`${baseURL()}/accounts/session`, { withCredentials: true })
      .then((res) => {
        resolve(res.data.session);
      })
      .catch((err) => {
        reject(err);
      });
  });
}

export async function login(username: string, password: string): Promise<Object> {
  let body = { username: username, password: password };

  return new Promise((resolve, reject) => {
    axios
      .post(`${baseURL()}/accounts/login`, body, { withCredentials: true })
      .then((res) => {
        resolve(res);
      })
      .catch((err) => reject(err));
  });
}

export async function logout(): Promise<any> {

  return new Promise((resolve, reject) => {
    axios
      .post(`${baseURL()}/accounts/logout`, {},{ withCredentials: true })
      .then((res) => {
        resolve(res);
      })
      .catch((err) => {
        reject(err);
      });

  });
}

export async function createAccount(
  username: string,
  password: string
): Promise<any> {
  let body = { username: username, password: password };

  return new Promise((resolve, reject) => {
    axios
      .post(`${baseURL()}/accounts/`, body, { withCredentials: true })
      .then((res) => {
        resolve(res);
      })
      .catch((err) => reject(err));
  });
}


export async function getAccountSubscriptions(): Promise<any> {
  return axios.get(`${baseURL}/accounts/subscriptions`, { withCredentials: true });
}

export async function addSubscription(subscription: string): Promise<any> {

  //TODO: Add string sanitization for subscription values
  let body = {subscription:subscription};

  return axios.put(`${baseURL()}/accounts/subscriptions/`, body, { withCredentials: true });
}
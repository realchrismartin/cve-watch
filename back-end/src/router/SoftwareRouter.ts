import express from "express";
import AbstractRouter from "./AbstractRouter";
import IRouter from "./IRouter";
import mockCPEResult from "../../test/mockCPEResult";

class SoftwareRouter extends AbstractRouter implements IRouter {

    constructor(app : express.Application, route : string) {
        super(app,route);
        //TODO: update to add all routes
        this.router.get("/",this.getSoftwareRoute);
    }

    //GET /software?query=term : Returns all software in the CPE which match a search substring
    //Use: SoftwareSearchView
    getSoftwareRoute = async(req : express.Request, res : express.Response) => {
        let startAt = req.query.startAt as string;
        let pageSize = req.query.pageSize as string;
        let searchTerm = req.query.query as string;

        if(startAt === undefined || pageSize === undefined || searchTerm === undefined) {
            res.status(400);
            res.send({error:"Request was missing either startAt or pageSize params"})
            return;
        }

        let result = [] as any[];


        let results=[] as any[];
        let start = parseInt(startAt)

        for(let i=start;i<start+parseInt(pageSize);i++) {
            let item = mockCPEResult; 
            results.push(item);
        }
        res.send({results:results})
    }
}

export default SoftwareRouter;
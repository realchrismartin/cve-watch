import express from "express";
import AbstractRouter from "./AbstractRouter";
import IRouter from "./IRouter";
import CVE_API from "./CVE_API";
import mockCVEResult from "../../test/mockCVEResult";

class VulnerabilityRouter extends AbstractRouter implements IRouter {

    constructor(app : express.Application, route : string) {
        super(app,route);
        
        this.router.get("/",this.getVulnerabilitiesRoute);
        this.router.get("/test",this.getVulnerabilitiesTestRoute); //TODO: Deprecate?
    }

    //GET vulnerabilities/ : Get the n most recent vulnerabilities from NVD (or further in the list, if start/end specified)
    //Use: VulnerabilityListView
    getVulnerabilitiesRoute = async(req : express.Request, res : express.Response) => {
        let startAt = req.query.startAt as string;
        let pageSize = req.query.pageSize as string;

        if(startAt === undefined || pageSize === undefined) {
            res.status(400);
            res.send({error:"Request was missing either startAt or pageSize params"})
        }

        let result = [] as any[];

        if(req.query.query !== undefined) {
         result = await CVE_API.getMore(req.query.query as string,parseInt(startAt),parseInt(pageSize));
        } else {
         result = await CVE_API.getMore("",parseInt(startAt),parseInt(pageSize));
        }

        res.send({results:result,total:999999}); //TODO: set total to real total
    }

    getVulnerabilitiesTestRoute = async(req : express.Request, res : express.Response) => {
        let startAt = req.query.startAt as string;
        let pageSize = req.query.pageSize as string;

        if(startAt === undefined || pageSize === undefined) {
            res.status(400);
            res.send({error:"Request was missing either startAt or pageSize params"})
        }

        let result = [] as any[];


        let results=[] as any[];
        let start = parseInt(startAt)

        for(let i=start;i<start+parseInt(pageSize);i++) {
            let item = mockCVEResult; 
            results.push(item);
        }
        res.send({results:results,total:999999}) //TODO: set total to real total
    }
}

export default VulnerabilityRouter;
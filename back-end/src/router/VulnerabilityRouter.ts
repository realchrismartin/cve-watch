import express from "express";
import AbstractRouter from "./AbstractRouter";
import IRouter from "./IRouter";

class VulnerabilityRouter extends AbstractRouter implements IRouter {

    constructor(app : express.Application, route : string) {
        super(app,route);
        
        //TODO: update to add all routes
        this.router.get("/",this.testRoute); //TODO: remove this route
    }

    //GET vulnerabilities/ : Get the n most recent vulnerabilities from NVD (or further in the list, if start/end specified)
    //Use: VulnerabilityListView
    getVulnerabilitiesRoute = async(req : express.Request, res : express.Response) => {
        res.send({note:"Not yet implemented"})
    }

    //GET vulnerabilities/search : Get the n most recent vulnerabilities which could affect a specific software @ version
    //Parameters: Software name search term, software version
    //TBD: May not be required if filtering is used on main list (may be expensive)
    //Use: VulnerabilityListView (logged in)
    getVulnerabilitiesForSoftwareRoute = async(req : express.Request, res : express.Response) => {
        res.send({note:"Not yet implemented"})
    }

    //GET vulnerabilities/some-cpe-id : Get the n most recent vulnerabilities from NVD for the specified software
    //Use: SoftwareSearchView
    getVulnerabilitiesForSoftwareByIdRoute = async(req : express.Request, res : express.Response) => {
        res.send({note:"Not yet implemented"})
    }

    testRoute = async(req : express.Request, res : express.Response) => {
        res.send({response:"Hello from the Software Router!"});
    }
}

export default VulnerabilityRouter;
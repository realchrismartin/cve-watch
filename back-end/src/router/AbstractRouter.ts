import express, { Router } from "express";
import IRouter from "./IRouter";
import session from "express-session";
import cors from "cors";
import createMemoryStore from 'memorystore';

class AbstractRouter implements IRouter {
  router: Router;

  constructor(app: express.Application, route: string) {
    this.router = express.Router();
    const MemoryStore = createMemoryStore(session);

    let sessionConfig = {
      name: "cve-app-user-session",
      secret: "TODOREPLACEME", //TODO: Replace and put in env
      store: new MemoryStore({
        checkPeriod: 86400000 // sessions expire after 24 hours
      }),
      cookie: {},
      saveUninitialized: false,
      resave: false,
    };

    let env = process.env.NODE_APP_ENV;
    let secure = false;

    if(env && env === "production") {
        secure = true;
    }

    sessionConfig.cookie =  { maxAge: 86400000, secure:secure, sameSite:"none" };

    app.set('trust proxy', 1); // trust first proxy

    //Override CORS
    app.use(cors({
        origin:["http://localhost:3000","http://localhost","https://p3-front.herokuapp.com"],
        credentials: true,
        exposedHeaders: ['set-cookie']
    }));

    app.use(session(sessionConfig));
    app.use(express.json());
    app.use(route, this.router);
  }
}

export default AbstractRouter;

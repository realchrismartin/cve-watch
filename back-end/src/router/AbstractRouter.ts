import express, { Router } from "express";
import IRouter from "./IRouter";
import session from "express-session";
import cors from "cors";
import createMemoryStore from 'memorystore';

class AbstractRouter implements IRouter {
  router: Router;

  constructor(app: express.Application, route: string) {
    this.router = express.Router();
    const MemoryStore = createMemoryStore(session);

    const corsOriginWhitelist = ["http://localhost:3000","http://localhost","https://p3-front.herokuapp.com"];

    var sessionConfig = {
      name: "cve-app-user-session",
      secret: "TODOREPLACEME", //TODO: Replace and put in env
      store: new MemoryStore({
        checkPeriod: 86400000 // sessions expire after 24 hours
      }),
      cookie: { maxAge: 86400000, secure: false }, //TODO: specify correct samesite attribute to avoid warnings, set a sane max age in ms
      saveUninitialized: false,
      resave: false,
    };

    //Override CORS
    app.use(cors({
        origin:corsOriginWhitelist,
        credentials: true,
        exposedHeaders: ['set-cookie']
    }));

    app.use(session(sessionConfig));
    app.use(express.json());
    app.use(route, this.router);
  }
}

export default AbstractRouter;

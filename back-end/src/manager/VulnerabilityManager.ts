export interface IVulnerabilityManager {
    getVulns(start: number, end: number): Promise<[]>; // TODO: maybe router does this
    getVulnsByKeyword(keyword: string, start: number, end: number): Promise<[]>; // TODO: and this
    pushToCache(vulnerabilities: []): void; // TODO: is void the right return?
    checkCache(start: number, end: number): boolean;
    checkCacheByKeyword(keyword: string, start: number, end: number): boolean;
    invalidateCache(): void;
}

export class VulnerabilityManager implements IVulnerabilityManager {
    private vulnCache: Map<string, {}>;

    constructor() {
        this.vulnCache = new Map<string, {}>();
    }

    getVulns = async(start: number, end: number): Promise<any> => {
        // TODO: if below return partial result, this needs logic to determine how many more results to fetch
        if (this.checkCache(start, end)) {
            return this.vulnCache;
        } else {
            // TODO: needs to actually connect with CVE API?
            //return await getVulnerabilities();
            return null
        }
    }

    getVulnsByKeyword = async(keyword: string, start: number, end: number): Promise<any> => {
        // TODO: if below return partial result, this needs logic to determine how many more results to fetch
        if (this.checkCacheByKeyword(keyword, start, end)) {
            return this.vulnCache.get(keyword);
            return null
        }
      //  return await getVulnerabilities(keyword);
      return null
    }

    pushToCache = (vulnerabilities: []): void => {
        for (let i = 0; i < vulnerabilities.length; i++) {
            this.vulnCache.set(vulnerabilities[i]["keyword"], vulnerabilities[i]);
        }
    }

    checkCache = (start: number, end: number): boolean => {
        // TODO: should this return the actual vulns? what if some are in cache but not all?
        if (start in this.vulnCache && end in this.vulnCache) {
            return true;
        } else {
            return false;
        }
    }

    checkCacheByKeyword = (keyword: string, start: number, end: number): boolean => {
        // TODO: same question as above - should it return partial results?
        let keyVulns = this.vulnCache.get(keyword);
        if (keyVulns) {
            if (start in keyVulns && end in keyVulns) {
                return true;
            }
        }
        return false;
    }

    invalidateCache = () => {
        this.vulnCache = new Map<string, {}>();
    }
}
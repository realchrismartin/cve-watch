import { model, Schema, Model, Document } from 'mongoose';

export interface IAccount extends Document {
    username: string;
    password: string;
    subscriptions: string[];
}

const AccountSchema : Schema = new Schema({
    username: {
        type: String,
        required: true,
        unique: true
    },
    password: {
        type: String,
        required: true
    },
    subscriptions: [{
        type: String
    }]
})

const AccountModel: Model<IAccount> = model('Account', AccountSchema);

/* Add a new user object to the database */
export function createNewAccount(newUser: {}) : Promise<IAccount> {
    return AccountModel.create(newUser);
}

/* Find a user by their auto-generated ID in the database */
export function getUserById(userID: string) : Promise<IAccount | null> {
    return AccountModel.findById(userID).exec();
}

/* Find a user by username */
export function getUserByName(username: string) : Promise<IAccount | null> {
    return AccountModel.findOne({username: username}).exec();
}
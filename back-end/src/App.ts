import express from 'express';
import mongoose from 'mongoose';
import IRouter from './router/IRouter';
import AccountRouter from './router/AccountRouter';
import VulnerabilityRouter from './router/VulnerabilityRouter';
import SoftwareRouter from './router/SoftwareRouter';
import { AccountManager } from './manager/AccountManager';
import { port, dbConnectionString } from "./Settings";

class App {

    app : express.Application;
    dbConnectionString : string;
    server : any;
    port : number;
    routers : IRouter[]

    constructor() { 
        this.app = express();
        this.routers = [];
        this.port = port();
        this.dbConnectionString = dbConnectionString();
    }

    async run() {
        return new Promise((resolve,reject) => {

            mongoose.connect(this.dbConnectionString, {useNewUrlParser: true}).then(async () => {
                console.log("Connected to database at " + this.dbConnectionString);

                mongoose.connection.on('error', (err) => {
                    reject(err);
                });

                this.server = this.app.listen(this.port,() => {
                    
                    this.routers.push(new AccountRouter(this.app, "/accounts", new AccountManager));
                    this.routers.push(new VulnerabilityRouter(this.app,"/vulnerabilities"));
                    this.routers.push(new SoftwareRouter(this.app,"/software"));
                    
                    console.log("Server online");
                    
                    this.server.on("close",() => {
                        console.log("Shutting down.")
                    });
                    
                    resolve(undefined);
                });
            });
        });
    }
}

export default App;

trigger:
  branches:
    include:
      - master

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  azureSubscriptionEndpoint: "cvewatch-azurerm-serviceconnection"
  containerRegistrySubscriptionEndpoint: "cvewatch-acr-serviceconnection"
  imageRepository: "cvewatch"
  containerRegistry: "cvewatchcr.azurecr.io"
  azureContainerRegistry:
  tag: "$(Build.BuildId)"
  cve.watch.backend.url: "http://localhost" 
  cve.watch.frontend.url: "http://localhost"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
      - task: DockerCompose@0
          displayName: Build services
          inputs:
            action: Build services
            azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
            azureContainerRegistry: $(containerRegistry)
            dockerComposeFile: docker-compose.yml
            projectName: $(Build.Repository.Name)
            qualifyImageNames: true
            additionalImageTags: $(Build.BuildId)
        - task: DockerCompose@0
          displayName: Push to Container Registry
          inputs:
            action: Push services
            azureSubscriptionEndpoint: $(containerRegistrySubscriptionEndpoint)
            azureContainerRegistry: $(containerRegistry)
            dockerComposeFile: docker-compose.yml
            projectName: $(Build.Repository.Name)
            qualifyImageNames: true
            additionalImageTags: $(Build.BuildId))

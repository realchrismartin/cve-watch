trigger:
  branches:
    include:
      - master

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: "e181c501-82b5-4bc0-bde3-752f9982cc2f"
  imageRepository: "cvewatch"
  containerRegistry: "cvewatchcr.azurecr.io"
  dockerfilePath: "$(Build.SourcesDirectory)/front-end/Dockerfile"
  tag: "$(Build.BuildId)"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
  - task: DockerCompose@0
    displayName: Build services
    inputs:
      action: Build services
      azureSubscriptionEndpoint: $(dockerRegistryServiceConnection)
      azureContainerRegistry: $(containerRegistry)
      dockerComposeFile: docker-compose.yml
      projectName: $(Build.Repository.Name)
      qualifyImageNames: true
      additionalImageTags: $(Build.BuildId)
  - task: DockerCompose@0
    displayName: Push to Container Registry
    inputs:
      action: Push services
      azureSubscriptionEndpoint: $(dockerRegistryServiceConnection)
      azureContainerRegistry: $(containerRegistry)
      dockerComposeFile: docker-compose.yml
      projectName: $(Build.Repository.Name)
      qualifyImageNames: true
      additionalImageTags: $(Build.BuildId))
